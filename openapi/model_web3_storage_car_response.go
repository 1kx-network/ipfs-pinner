/*
IPFS Pinning Service API

some notes

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Web3StorageCarResponse web3.storage car upload response
type Web3StorageCarResponse struct {
	// This is the IPFS cid provided back for your content
	Cid *string `json:"cid,omitempty"`
}

// NewWeb3StorageCarResponse instantiates a new Web3StorageCarResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWeb3StorageCarResponse() *Web3StorageCarResponse {
	this := Web3StorageCarResponse{}
	return &this
}

// NewWeb3StorageCarResponseWithDefaults instantiates a new Web3StorageCarResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWeb3StorageCarResponseWithDefaults() *Web3StorageCarResponse {
	this := Web3StorageCarResponse{}
	return &this
}

// GetCid returns the Cid field value if set, zero value otherwise.
func (o *Web3StorageCarResponse) GetCid() string {
	if o == nil || o.Cid == nil {
		var ret string
		return ret
	}
	return *o.Cid
}

// GetCidOk returns a tuple with the Cid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Web3StorageCarResponse) GetCidOk() (*string, bool) {
	if o == nil || o.Cid == nil {
		return nil, false
	}
	return o.Cid, true
}

// HasCid returns a boolean if a field has been set.
func (o *Web3StorageCarResponse) HasCid() bool {
	if o != nil && o.Cid != nil {
		return true
	}

	return false
}

// SetCid gets a reference to the given string and assigns it to the Cid field.
func (o *Web3StorageCarResponse) SetCid(v string) {
	o.Cid = &v
}

func (o Web3StorageCarResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Cid != nil {
		toSerialize["cid"] = o.Cid
	}
	return json.Marshal(toSerialize)
}

type NullableWeb3StorageCarResponse struct {
	value *Web3StorageCarResponse
	isSet bool
}

func (v NullableWeb3StorageCarResponse) Get() *Web3StorageCarResponse {
	return v.value
}

func (v *NullableWeb3StorageCarResponse) Set(val *Web3StorageCarResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableWeb3StorageCarResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableWeb3StorageCarResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWeb3StorageCarResponse(val *Web3StorageCarResponse) *NullableWeb3StorageCarResponse {
	return &NullableWeb3StorageCarResponse{value: val, isSet: true}
}

func (v NullableWeb3StorageCarResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWeb3StorageCarResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
