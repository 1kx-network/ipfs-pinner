/*
IPFS Pinning Service API

some notes

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PinataFilePinRequest File upload for pinning request
type PinataFilePinRequest struct {
	// file you're attempting to upload to pinata
	File string `json:"file"`
	PinataOptions *PinataOptions `json:"pinataOptions,omitempty"`
	PinataMetadata *PinataMetadata `json:"pinataMetadata,omitempty"`
}

// NewPinataFilePinRequest instantiates a new PinataFilePinRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPinataFilePinRequest(file string) *PinataFilePinRequest {
	this := PinataFilePinRequest{}
	this.File = file
	return &this
}

// NewPinataFilePinRequestWithDefaults instantiates a new PinataFilePinRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPinataFilePinRequestWithDefaults() *PinataFilePinRequest {
	this := PinataFilePinRequest{}
	return &this
}

// GetFile returns the File field value
func (o *PinataFilePinRequest) GetFile() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.File
}

// GetFileOk returns a tuple with the File field value
// and a boolean to check if the value has been set.
func (o *PinataFilePinRequest) GetFileOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.File, true
}

// SetFile sets field value
func (o *PinataFilePinRequest) SetFile(v string) {
	o.File = v
}

// GetPinataOptions returns the PinataOptions field value if set, zero value otherwise.
func (o *PinataFilePinRequest) GetPinataOptions() PinataOptions {
	if o == nil || o.PinataOptions == nil {
		var ret PinataOptions
		return ret
	}
	return *o.PinataOptions
}

// GetPinataOptionsOk returns a tuple with the PinataOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PinataFilePinRequest) GetPinataOptionsOk() (*PinataOptions, bool) {
	if o == nil || o.PinataOptions == nil {
		return nil, false
	}
	return o.PinataOptions, true
}

// HasPinataOptions returns a boolean if a field has been set.
func (o *PinataFilePinRequest) HasPinataOptions() bool {
	if o != nil && o.PinataOptions != nil {
		return true
	}

	return false
}

// SetPinataOptions gets a reference to the given PinataOptions and assigns it to the PinataOptions field.
func (o *PinataFilePinRequest) SetPinataOptions(v PinataOptions) {
	o.PinataOptions = &v
}

// GetPinataMetadata returns the PinataMetadata field value if set, zero value otherwise.
func (o *PinataFilePinRequest) GetPinataMetadata() PinataMetadata {
	if o == nil || o.PinataMetadata == nil {
		var ret PinataMetadata
		return ret
	}
	return *o.PinataMetadata
}

// GetPinataMetadataOk returns a tuple with the PinataMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PinataFilePinRequest) GetPinataMetadataOk() (*PinataMetadata, bool) {
	if o == nil || o.PinataMetadata == nil {
		return nil, false
	}
	return o.PinataMetadata, true
}

// HasPinataMetadata returns a boolean if a field has been set.
func (o *PinataFilePinRequest) HasPinataMetadata() bool {
	if o != nil && o.PinataMetadata != nil {
		return true
	}

	return false
}

// SetPinataMetadata gets a reference to the given PinataMetadata and assigns it to the PinataMetadata field.
func (o *PinataFilePinRequest) SetPinataMetadata(v PinataMetadata) {
	o.PinataMetadata = &v
}

func (o PinataFilePinRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["file"] = o.File
	}
	if o.PinataOptions != nil {
		toSerialize["pinataOptions"] = o.PinataOptions
	}
	if o.PinataMetadata != nil {
		toSerialize["pinataMetadata"] = o.PinataMetadata
	}
	return json.Marshal(toSerialize)
}

type NullablePinataFilePinRequest struct {
	value *PinataFilePinRequest
	isSet bool
}

func (v NullablePinataFilePinRequest) Get() *PinataFilePinRequest {
	return v.value
}

func (v *NullablePinataFilePinRequest) Set(val *PinataFilePinRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePinataFilePinRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePinataFilePinRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePinataFilePinRequest(val *PinataFilePinRequest) *NullablePinataFilePinRequest {
	return &NullablePinataFilePinRequest{value: val, isSet: true}
}

func (v NullablePinataFilePinRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePinataFilePinRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


